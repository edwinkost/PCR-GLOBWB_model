[globalOptions]


# Set the pcrglobwb output directory in an absolute path.
#~ outputDir = /scratch/ms/copext/cyes/test_monthly_runs/
outputDir    = MAIN_OUTPUT_DIRECTORY


# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories and files will be relative to this.
#~ inputDir  = /scratch/ms/copext/cyes/data/pcrglobwb_input_ulysses/develop/ 
inputDir     = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_ulysses/pcrglobwb_ulysses_input_files_v2021-01-03/


# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
#~ cloneMap  = global_06min/cloneMaps/global_land_mask/version_2020-08-11/land_mask_only.map
cloneMap     = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_ulysses/clone_maps/subdomains/version_2020-09-XX/clonemap_mask_%i.map


# The area/landmask of interest:
#~ landmask  = global_06min/cloneMaps/global_land_mask/version_2020-08-11/land_mask_only.map
landmask     = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_ulysses/clone_maps/subdomains/version_2020-09-XX/landmask_river_and_land_mask_%i.map


# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB output (not coupled to MODFLOW), development version for Ulysses ; MAIN_OUTPUT_DIRECTORY
description = by Edwin H. Sutanudjaja (contact: e.h.sutanudjaja@uu.nl)


startTime = STARTING_DATE
endTime   = END_DATE

#~ startTime = 1980-01-01
#~ endTime   = 2019-12-31
#~ # Format: YYYY-MM-DD ; The model runs on daily time step.


# spinning up options:
minConvForSoilSto    = 0.0
minConvForGwatSto    = 0.0
minConvForChanSto    = 0.0
minConvForTotlSto    = 0.0

#~ # - number of spin up years
#~ maxSpinUpsInYears = 20

#~ # - for production, no spin up
#~ maxSpinUpsInYears = 0

maxSpinUpsInYears    = NUM_OF_YEARS_FOR_SPINUP

# option/directory for saving the spin-up directory 
spinUpOutputDir = True

# with merging
with_merging = True
cloneAreas = GlobalUlysses


[meteoOptions]


# Method to calculate referencePotETP (reference potential evaporation+transpiration)
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
referenceETPotMethod    = Input
#~ referenceETPotMethod = Hamon

#~ precipitationNC               = PRECIPITATION_FORCING_FILE
#~ temperatureNC                 = TEMPERATURE_FORCING_FILE
#~ refETPotFileNC                = REF_POT_ET_FORCING_FILE

precipitation_file_per_month     = True
temperature_file_per_month       = True
refETPotFileNC_file_per_month    = True

#~ # on eejit
#~ precipitationNC               = /scratch/depfg/sutan101/data/era5land_ulysses/version_202011XX/%04i/%02i/precipitation_daily_%02i_%04i.nc
#~ temperatureNC                 = /scratch/depfg/sutan101/data/era5land_ulysses/version_202011XX/%04i/%02i/tavg_%02i_%04i.nc
#~ refETPotFileNC                = /scratch/depfg/sutan101/data/era5land_ulysses/version_202011XX/%04i/%02i/pet_%02i_%04i.nc

# on snellius
precipitationNC               = /projects/0/dfguu/users/edwin/data/era5land_ulysses/version_202011XX/%04i/%02i/precipitation_daily_%02i_%04i.nc
temperatureNC                 = /projects/0/dfguu/users/edwin/data/era5land_ulysses/version_202011XX/%04i/%02i/tavg_%02i_%04i.nc
refETPotFileNC                = /projects/0/dfguu/users/edwin/data/era5land_ulysses/version_202011XX/%04i/%02i/pet_%02i_%04i.nc

# variable names in the forcing files (optional)
precipitationVariableName    = pre
temperatureVariableName      = tavg
referenceEPotVariableName    = pet

# conversion constants and factors to correct forcing values (optional) so that the units are in m.day-1 and degree Celcius                                                                                                           
precipitationConstant    = 0.0
precipitationFactor      = 0.001
temperatureConstant      = 0.0
temperatureFactor        = 1.0
referenceEPotConstant    = 0.0
referenceEPotFactor      = 0.001


# option to ignore small values of precipitation (default is False)
rounddownPrecipitation   = False


[landSurfaceOptions]

debugWaterBalance = True

numberOfUpperSoilLayers = 2

# topography parameters
topographyNC        = pcrglobwb_topography_parameters_06min_22_july_2020.nc

# soil parameters
soilPropertiesNC    = soilgrids_properties_ulysses_6arcmin_filled.nc

		
# option to skip extrapolation
noParameterExtrapolation = True

#~ landCoverTypes = forest,grassland
landCoverTypes    = forest,grassland,crop,urban

noLandCoverFractionCorrection = False




[forestOptions]

name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
# - Sutanudjaja et al. (2011)
degreeDayFactor     =  0.0055
#~ # - (Sutanudjaja et al. 2018)
#~ degreeDayFactor  =  0.0025

# other paramater values
minTopWaterLayer  = 0.0
minCropKC         = 0.2

cropCoefficientNC = tall_natural_cropcoefficient_06min.nc
interceptCapNC    = tall_natural_interceptioncapacity_06min.nc
coverFractionNC   = tall_natural_groundcover_06min.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover      = fraction_tall_natural_06arcmin.map
minSoilDepthFrac  = tall_natural_min_rootdepth_fraction_06min.map
maxSoilDepthFrac  = tall_natural_max_rootdepth_fraction_06min.map
rootFraction1     = tall_natural_rootfraction_z1_06min.map
rootFraction2     = tall_natural_rootfraction_z2_06min.map
maxRootDepth      = tall_natural_max_rootdepth_06min.map
# Note: The maxRootDepth is not used for non irrigated land cover type. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.


# initial conditions:
interceptStorIni = MAIN_INITIAL_STATE_FOLDER/interceptStor_forest_DATE_FOR_INITIAL_STATES.map
snowCoverSWEIni  = MAIN_INITIAL_STATE_FOLDER/snowCoverSWE_forest_DATE_FOR_INITIAL_STATES.map
snowFreeWaterIni = MAIN_INITIAL_STATE_FOLDER/snowFreeWater_forest_DATE_FOR_INITIAL_STATES.map
topWaterLayerIni = MAIN_INITIAL_STATE_FOLDER/topWaterLayer_forest_DATE_FOR_INITIAL_STATES.map
storUppIni       = MAIN_INITIAL_STATE_FOLDER/storUpp_forest_DATE_FOR_INITIAL_STATES.map
storLowIni       = MAIN_INITIAL_STATE_FOLDER/storLow_forest_DATE_FOR_INITIAL_STATES.map
interflowIni     = MAIN_INITIAL_STATE_FOLDER/interflow_forest_DATE_FOR_INITIAL_STATES.map

#~ # starting from zero initial conditions:
#~ interceptStorIni = 0.0
#~ snowCoverSWEIni  = 0.0
#~ snowFreeWaterIni = 0.0
#~ topWaterLayerIni = 0.0
#~ storUppIni       = 0.0
#~ storLowIni       = 0.0
#~ interflowIni     = 0.0


#~ # option to skip extrapolation
#~ noParameterExtrapolation = True


[grasslandOptions]

name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
# - Sutanudjaja et al. (2011)
degreeDayFactor     =  0.0055
#~ # - (Sutanudjaja et al. 2018)
#~ degreeDayFactor  =  0.0025


# other paramater values
minTopWaterLayer  = 0.0
minCropKC         = 0.2

cropCoefficientNC = short_cropcoefficient_06min.nc
interceptCapNC    = short_interceptioncapacity_06min.nc
coverFractionNC   = short_groundcover_06min.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover      = fraction_short_natural_06arcmin.map
minSoilDepthFrac  = short_min_rootdepth_fraction_06min.map
maxSoilDepthFrac  = short_max_rootdepth_fraction_06min.map
rootFraction1     = short_rootfraction_z1_06min.map
rootFraction2     = short_rootfraction_z2_06min.map
maxRootDepth      = short_max_rootdepth_06min.map
# Note: The maxRootDepth is not used for non irrigated land cover type. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.


# initial conditions:
interceptStorIni = MAIN_INITIAL_STATE_FOLDER/interceptStor_grassland_DATE_FOR_INITIAL_STATES.map
snowCoverSWEIni  = MAIN_INITIAL_STATE_FOLDER/snowCoverSWE_grassland_DATE_FOR_INITIAL_STATES.map
snowFreeWaterIni = MAIN_INITIAL_STATE_FOLDER/snowFreeWater_grassland_DATE_FOR_INITIAL_STATES.map
topWaterLayerIni = MAIN_INITIAL_STATE_FOLDER/topWaterLayer_grassland_DATE_FOR_INITIAL_STATES.map
storUppIni       = MAIN_INITIAL_STATE_FOLDER/storUpp_grassland_DATE_FOR_INITIAL_STATES.map
storLowIni       = MAIN_INITIAL_STATE_FOLDER/storLow_grassland_DATE_FOR_INITIAL_STATES.map
interflowIni     = MAIN_INITIAL_STATE_FOLDER/interflow_grassland_DATE_FOR_INITIAL_STATES.map

#~ # starting from zero initial conditions:
#~ interceptStorIni = 0.0
#~ snowCoverSWEIni  = 0.0
#~ snowFreeWaterIni = 0.0
#~ topWaterLayerIni = 0.0
#~ storUppIni       = 0.0
#~ storLowIni       = 0.0
#~ interflowIni     = 0.0

#~ # option to skip extrapolation
#~ noParameterExtrapolation = True


[urbanOptions]
# TODO: We still have to spin up the model for initial conditions. Shall we also fill/cover missing values in each paramater?

name = urban
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
# - Sutanudjaja et al. (2011)
degreeDayFactor     =  0.0055
#~ # - (Sutanudjaja et al. 2018)
#~ degreeDayFactor  =  0.0025


# other paramater values
minTopWaterLayer  = 0.0
minCropKC         = 0.2

cropCoefficientNC = urban_cropcoefficient_06min.nc
interceptCapNC    = urban_interceptioncapacity_06min.nc
coverFractionNC   = urban_groundcover_06min.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover      = fraction_urban_06arcmin.map
minSoilDepthFrac  = urban_min_rootdepth_fraction_06min.map
maxSoilDepthFrac  = urban_max_rootdepth_fraction_06min.map
rootFraction1     = urban_rootfraction_z1_06min.map
rootFraction2     = urban_rootfraction_z2_06min.map
maxRootDepth      = urban_max_rootdepth_06min.map
# Note: The maxRootDepth is not used for non irrigated land cover type. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.


# initial conditions:
interceptStorIni = MAIN_INITIAL_STATE_FOLDER/interceptStor_urban_DATE_FOR_INITIAL_STATES.map
snowCoverSWEIni  = MAIN_INITIAL_STATE_FOLDER/snowCoverSWE_urban_DATE_FOR_INITIAL_STATES.map
snowFreeWaterIni = MAIN_INITIAL_STATE_FOLDER/snowFreeWater_urban_DATE_FOR_INITIAL_STATES.map
topWaterLayerIni = MAIN_INITIAL_STATE_FOLDER/topWaterLayer_urban_DATE_FOR_INITIAL_STATES.map
storUppIni       = MAIN_INITIAL_STATE_FOLDER/storUpp_urban_DATE_FOR_INITIAL_STATES.map
storLowIni       = MAIN_INITIAL_STATE_FOLDER/storLow_urban_DATE_FOR_INITIAL_STATES.map
interflowIni     = MAIN_INITIAL_STATE_FOLDER/interflow_urban_DATE_FOR_INITIAL_STATES.map

#~ # starting from zero initial conditions:
#~ interceptStorIni    = 0.0
#~ snowCoverSWEIni     = 0.0
#~ snowFreeWaterIni    = 0.0
#~ topWaterLayerIni    = 0.0
#~ storUppIni          = 0.0
#~ storLowIni          = 0.0
#~ interflowIni        = 0.0


#~ # option to skip extrapolation
#~ noParameterExtrapolation = True


[cropOptions]
# we still have to spin up the model for initial conditions

name = crop
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
# - Sutanudjaja et al. (2011)
degreeDayFactor     =  0.0055
#~ # - (Sutanudjaja et al. 2018)
#~ degreeDayFactor  =  0.0025


# other paramater values
minTopWaterLayer  = 0.0
minCropKC         = 0.2

cropCoefficientNC = crops_cropcoefficient_06min.nc
interceptCapNC    = crops_interceptioncapacity_06min.nc
coverFractionNC   = crops_groundcover_06min.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover      = fraction_cropland_06arcmin.map
minSoilDepthFrac  = crops_min_rootdepth_fraction_06min.map
maxSoilDepthFrac  = crops_max_rootdepth_fraction_06min.map
rootFraction1     = crops_rootfraction_z1_06min.map
rootFraction2     = crops_rootfraction_z2_06min.map
maxRootDepth      = crops_max_rootdepth_06min.map
# Note: The maxRootDepth is not used for non irrigated land cover type. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.


# initial conditions:
interceptStorIni = MAIN_INITIAL_STATE_FOLDER/interceptStor_crop_DATE_FOR_INITIAL_STATES.map
snowCoverSWEIni  = MAIN_INITIAL_STATE_FOLDER/snowCoverSWE_crop_DATE_FOR_INITIAL_STATES.map
snowFreeWaterIni = MAIN_INITIAL_STATE_FOLDER/snowFreeWater_crop_DATE_FOR_INITIAL_STATES.map
topWaterLayerIni = MAIN_INITIAL_STATE_FOLDER/topWaterLayer_crop_DATE_FOR_INITIAL_STATES.map
storUppIni       = MAIN_INITIAL_STATE_FOLDER/storUpp_crop_DATE_FOR_INITIAL_STATES.map
storLowIni       = MAIN_INITIAL_STATE_FOLDER/storLow_crop_DATE_FOR_INITIAL_STATES.map
interflowIni     = MAIN_INITIAL_STATE_FOLDER/interflow_crop_DATE_FOR_INITIAL_STATES.map

#~ # starting from zero initial conditions:
#~ interceptStorIni    = 0.0
#~ snowCoverSWEIni     = 0.0
#~ snowFreeWaterIni    = 0.0
#~ topWaterLayerIni    = 0.0
#~ storUppIni          = 0.0
#~ storLowIni          = 0.0
#~ interflowIni        = 0.0


#~ # option to skip extrapolation
#~ noParameterExtrapolation = True





[groundwaterOptions]

debugWaterBalance       = True

# default GMD paper parameter (Sutanudjaja et al., 2018)
groundwaterPropertiesNC = groundwaterProperties5ArcMin.nc

#~ # a new version
#~ groundwaterPropertiesNC = None
#~ # If None, the following files must be defined.  
#~ specificYield  = global_06min/groundwater/properties/version_2020-07-08/specific_yield_aquifer_06min.map
#~ recessionCoeff = global_06min/groundwater/properties/version_2020-07-08/recession_coefficient_06min.map
#~ kSatAquifer    = global_06min/groundwater/properties/version_2020-07-08/k_conductivity_aquifer_06min.map


# minimum value for groundwater recession coefficient (day-1) 
# - about 11 years
minRecessionCoeff = 0.00025
#~ # - about 27 years
#~ minRecessionCoeff = 1.0e-4


# exponent in baseflow reservoir formula (default is one)
#~ baseflow_exponent = 1.0
baseflow_exponent    = BASEFLOW_EXPONENT


doNotExtrapolateThickness = True
noParameterExtrapolation  = True


# initial conditions:
storGroundwaterIni                        = MAIN_INITIAL_STATE_FOLDER/storGroundwater_DATE_FOR_INITIAL_STATES.map
#~ # - estimate storGroundwaterIni from average groundwater recharge (unit: m/day)
#~ storGroundwaterIni                     = ESTIMATE_FROM_DAILY_GROUNDWATER_RECHARGE_RATE
#~ dailyGroundwaterRechargeIni            = DAILY_GROUNDWATER_RECHARGE_FOR_INITIAL_CONDITION
# 
avgStorGroundwaterIni                     = MAIN_INITIAL_STATE_FOLDER/avgStorGroundwater_DATE_FOR_INITIAL_STATES.map
#
# for a naturalized run, we can ignore 
storGroundwaterFossilIni                  = 0.0
#
# additional initial conditions for pumping behaviors
avgNonFossilGroundwaterAllocationLongIni  = 0.0
avgNonFossilGroundwaterAllocationShortIni = 0.0
avgTotalGroundwaterAbstractionIni         = 0.0
avgTotalGroundwaterAllocationLongIni      = 0.0
avgTotalGroundwaterAllocationShortIni     = 0.0
#
# additional initial conditions (needed only for MODFLOW run) 
relativeGroundwaterHeadIni                = MAIN_INITIAL_STATE_FOLDER/relativeGroundwaterHead_DATE_FOR_INITIAL_STATES.map
baseflowIni                               = MAIN_INITIAL_STATE_FOLDER/baseflow_DATE_FOR_INITIAL_STATES.map


#~ # starting with zero initial conditions:
#~ storGroundwaterIni                        = 0.0
#~ storGroundwaterFossilIni                  = 0.0
#~ avgNonFossilGroundwaterAllocationLongIni  = 0.0
#~ avgNonFossilGroundwaterAllocationShortIni = 0.0
#~ avgTotalGroundwaterAbstractionIni         = 0.0
#~ avgTotalGroundwaterAllocationLongIni      = 0.0
#~ avgTotalGroundwaterAllocationShortIni     = 0.0
#~ relativeGroundwaterHeadIni                = 0.0
#~ baseflowIni                               = 0.0
#~ avgStorGroundwaterIni                     = 0.0


[routingOptions]

debugWaterBalance = True

# drainage direction map
#~ lddMap   = 5.0
lddMap      = lddsound_06min_version_202007XX_for_ulysses.map

# cell area (unit: m2)
cellAreaMap = cellarea.map

# routing method:
routingMethod = accuTravelTime

# manning coefficient
manningsN   = 0.04

# Option for flood plain simulation
dynamicFloodPlain = False


# channel gradient
gradient             = channel_gradient.map

# constant channel depth 
constantChannelDepth = bankfull_depth.map

# constant channel width (optional)
constantChannelWidth = bankfull_width.map

# minimum channel width (optional)
minimumChannelWidth  = bankfull_width.map

# channel properties for flooding
bankfullCapacity     = None
# - If None, it will be estimated from (bankfull) channel depth (m) and width (m) 


# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = cropCoefficientForOpenWater.nc
minCropWaterKC         = 1.00


# lake and reservoir parameters
includeWaterBodies     = True
waterBodyInputNC       = lakes_and_reservoirs_06min_global_version_july_2020_for_ulysses.nc
onlyNaturalWaterBodies = False


# initial conditions:
waterBodyStorageIni            = MAIN_INITIAL_STATE_FOLDER/waterBodyStorage_DATE_FOR_INITIAL_STATES.map
channelStorageIni              = MAIN_INITIAL_STATE_FOLDER/channelStorage_DATE_FOR_INITIAL_STATES.map
readAvlChannelStorageIni       = MAIN_INITIAL_STATE_FOLDER/readAvlChannelStorage_DATE_FOR_INITIAL_STATES.map
avgDischargeLongIni            = MAIN_INITIAL_STATE_FOLDER/avgDischargeLong_DATE_FOR_INITIAL_STATES.map
avgDischargeShortIni           = MAIN_INITIAL_STATE_FOLDER/avgDischargeShort_DATE_FOR_INITIAL_STATES.map
m2tDischargeLongIni            = MAIN_INITIAL_STATE_FOLDER/m2tDischargeLong_DATE_FOR_INITIAL_STATES.map
avgBaseflowLongIni             = MAIN_INITIAL_STATE_FOLDER/avgBaseflowLong_DATE_FOR_INITIAL_STATES.map
riverbedExchangeIni            = MAIN_INITIAL_STATE_FOLDER/riverbedExchange_DATE_FOR_INITIAL_STATES.map
#
# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
subDischargeIni                = MAIN_INITIAL_STATE_FOLDER/subDischarge_DATE_FOR_INITIAL_STATES.map
#
avgLakeReservoirInflowShortIni = MAIN_INITIAL_STATE_FOLDER/avgLakeReservoirInflowShort_DATE_FOR_INITIAL_STATES.map
avgLakeReservoirOutflowLongIni = MAIN_INITIAL_STATE_FOLDER/avgLakeReservoirOutflowLong_DATE_FOR_INITIAL_STATES.map
#
# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni     = MAIN_INITIAL_STATE_FOLDER/timestepsToAvgDischarge_DATE_FOR_INITIAL_STATES.map
# Note that: 
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)


#~ # starting with zero initial conditions:
#~ waterBodyStorageIni            = 0.0
#~ channelStorageIni              = 0.0
#~ readAvlChannelStorageIni       = 0.0
#~ avgDischargeLongIni            = 0.0
#~ avgDischargeShortIni           = 0.0
#~ m2tDischargeLongIni            = 0.0
#~ avgBaseflowLongIni             = 0.0
#~ riverbedExchangeIni            = 0.0
#~ subDischargeIni                = 0.0
#~ avgLakeReservoirInflowShortIni = 0.0
#~ avgLakeReservoirOutflowLongIni = 0.0
#~ timestepsToAvgDischargeIni     = 0.0


[reportingOptions]

# landmask for reporting
#~ landmask_for_reporting = global_06min/cloneMaps/global_land_mask/version_2020-08-11/land_mask_only.map
#~ landmask_for_reporting = global_06min/cloneMaps/subdomains/version_2020-09-XX/landmask_land_mask_%i.map
#~ landmask_for_reporting = global_06min/cloneMaps/subdomains/version_2020-09-XX/landmask_river_and_land_mask_%i.map

landmask_for_reporting    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_ulysses/clone_maps/subdomains/version_2020-09-XX/landmask_land_mask_%i.map

# output files that will be written in the disk in netcdf files:
# - daily resolution
outDailyTotNC = ulyssesP,ulyssesET,ulyssesSWE,ulyssesQsm,ulyssesSM,ulyssesQrRunoff,ulyssesDischarge,ulyssessRefPET,ulyssessCropPET,ulyssesSnowFraction,ulyssesSMUpp,temperature
# - monthly resolution
outMonthTotNC = actualET,runoff,totalRunoff,baseflow,directRunoff,interflowTotal,precipitation,gwRecharge,surfaceWaterInf,referencePotET,totalEvaporation,totalPotentialEvaporation,totLandSurfaceActuaET,totalLandSurfacePotET,waterBodyActEvaporation,waterBodyPotEvaporation
outMonthAvgNC = ulyssesP,ulyssesET,ulyssesSWE,ulyssesQsm,ulyssesSM,ulyssesQrRunoff,ulyssesDischarge,ulyssessRefPET,ulyssessCropPET,ulyssesSnowFraction,ulyssesSMUpp,discharge,temperature,dynamicFracWat,surfaceWaterStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalActiveStorageThickness,totalWaterStorageThickness,satDegUpp,satDegLow,channelStorage,waterBodyStorage
outMonthEndNC = ulyssesP,ulyssesET,ulyssesSWE,ulyssesQsm,ulyssesSM,ulyssesQrRunoff,ulyssesDischarge,ulyssessRefPET,ulyssessCropPET,ulyssesSnowFraction,ulyssesSMUpp
# - annual resolution
outAnnuaTotNC = totalEvaporation,precipitation,gwRecharge,totalRunoff,baseflow,runoff,actualET,referencePotET,totalPotentialEvaporation,totalLandSurfacePotET,totalAbstraction
outAnnuaAvgNC = ulyssesP,ulyssesET,ulyssesSWE,ulyssesQsm,ulyssesSM,ulyssesQrRunoff,ulyssesDischarge,ulyssessRefPET,ulyssessCropPET,ulyssesSnowFraction,ulyssesSMUpp,discharge,temperature,surfaceWaterStorage,waterBodyStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness,satDegUpp,satDegLow,channelStorage,waterBodyStorage,gwRecharge
outAnnuaEndNC = surfaceWaterStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness
# - monthly and annual maxima
outMonthMaxNC = None
outAnnuaMaxNC = None

#~ # netcdf format and zlib setup
#~ formatNetCDF = NETCDF4
#~ zlib = True

# option to save states at the end of every month
save_monthly_end_states = True


[mergingOutputOptions]

# output variables/files that will be merged:
outDailyTotNC = None
# - monthly resolution
outMonthTotNC = None
outMonthAvgNC = temperature,discharge,totalWaterStorageThickness,ulyssesET,ulyssesQrRunoff,ulyssesSMUpp,ulyssesSM,ulyssesSWE,ulyssesSnowFraction
outMonthEndNC = None
# - annual resolution
outAnnuaTotNC = totalEvaporation,precipitation,totalRunoff,baseflow,runoff,actualET,referencePotET,totalPotentialEvaporation,totalLandSurfacePotET
outAnnuaAvgNC = temperature,discharge,gwRecharge
outAnnuaEndNC = None
# - monthly and annual maxima
outMonthMaxNC = None
outAnnuaMaxNC = None

#~ # netcdf format and zlib setup
#~ formatNetCDF = NETCDF4
#~ zlib = True

# the intended (merged) global clone map
cloneMap = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_ulysses/pcrglobwb_ulysses_input_files_v2021-01-03/land_mask_only.map

[prefactorOptions]

log_10_multiplier_for_kSat    = LOG_10_MULTIPLIER_FOR_KSAT
linear_multiplier_for_storCap = 1.0

[modificationBasedOnSystemArgumentOptions]

# provide a list of system arguments and their corresponding strings that will be replaced in this configuration file
-mod           = MAIN_OUTPUT_DIRECTORY
-sd            = STARTING_DATE   
-ed            = END_DATE
-noyfsu        = NUM_OF_YEARS_FOR_SPINUP
-pff           = PRECIPITATION_FORCING_FILE
-tff           = TEMPERATURE_FORCING_FILE
-rpetff        = REF_POT_ET_FORCING_FILE
-misf          = MAIN_INITIAL_STATE_FOLDER  
-dfis          = DATE_FOR_INITIAL_STATES  
-bfexp         = BASEFLOW_EXPONENT
-log10mfksat   = LOG_10_MULTIPLIER_FOR_KSAT

